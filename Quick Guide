Pre:
- macos

1. Install kubectl
- brew install kubectl
2. Install minikube
- brew install minikube

==> 验证 kubectl 配置
3. 通过获取集群状态的方法，检查是否已恰当的配置了 kubectl：
- kubectl cluster-info
如果返回一个 URL，则意味着 kubectl 成功的访问到了你的集群。
/*
response:
Kubernetes master is running at https://127.0.0.1:55006
KubeDNS is running at https://127.0.0.1:55006/api/v1/namespaces/kube-system/services/kube-dns:dns/proxy

To further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.
*/

4. Interact with your cluster
- kubectl get po -A
/*
NAMESPACE     NAME                               READY   STATUS    RESTARTS   AGE
kube-system   coredns-74ff55c5b-cgqfb            1/1     Running   0          94m
kube-system   etcd-minikube                      1/1     Running   0          94m
kube-system   kube-apiserver-minikube            1/1     Running   0          94m
kube-system   kube-controller-manager-minikube   1/1     Running   0          94m
kube-system   kube-proxy-h7xdr                   1/1     Running   0          94m
kube-system   kube-scheduler-minikube            1/1     Running   0          94m
kube-system   storage-provisioner                1/1     Running   0          94m
*/
- 为了进一步了解集群状态，minikube捆绑了Kubernetes仪表板，使您可以轻松适应新环境：
- minikube dashboard

5. 部署应用
- kubectl create deployment hello-minikube --image=k8s.gcr.io/echoserver:1.4
- kubectl expose deployment hello-minikube --type=NodePort --port=8080

- kubectl get services hello-minikube

- minikube service hello-minikube Or - kubectl port-forward service/hello-minikube 7080:8080

。。。。。。
minikube: ttps://minikube.sigs.k8s.io/docs/start/